/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package leadgen;

import com.opencsv.CSVWriter;
import com.opencsv.CSVWriterBuilder;
import com.opencsv.ICSVWriter;

import java.io.*;
import java.nio.file.Files;
import java.time.Instant;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.stream.Collectors;

public class App {

    public static void main(String[] args) throws Exception {
        if(args.length == 0) {
            showHelp();
            return;
        }
        long num = Long.parseLong(args[0]);
        String name = "leads_" + Instant.now().toString() + ".csv";
        genCSV(num, name);
    }

    private static void genCSV(long num, String name) throws Exception {
        System.out.println("Generating " + name + " with " + num + " leads...");

        Writer writer = new BufferedWriter(new FileWriter(name));
        ICSVWriter csvWriter = new CSVWriterBuilder(writer).build();

        String[] header = { "First Name", "Last Name", "Email" };
        csvWriter.writeNext(header);

        Random random = new Random();
        List<String> domain = load("domains.txt");
        List<String> last = load("last.txt");
        List<String> male = load("male-first.txt");
        List<String> female = load("female-first.txt");

        String first_, last_, email_;
        String[] row = new String[3];
        for(long i = 0; i < num; i++) {
            if(random.nextBoolean()) first_ = pick(random, male);
            else first_ = pick(random, female);
            last_ = pick(random, last);
            email_ = first_ + '.' + last_ + "@" + pick(random, domain);

            row[0] = toSentenceCase(first_);
            row[1] = toSentenceCase(last_);
            row[2] = email_.toLowerCase();

            csvWriter.writeNext(row);
        }

        csvWriter.close();
        writer.close();
    }

    private static String toSentenceCase(String s) {
        return s.substring(0, 1).toUpperCase() + s.substring(1).toLowerCase();
    }

    private static String pick(Random random, List<String> options) {
        return options.get(random.nextInt(options.size()));
    }

    private static List<String> load(String name) throws Exception {
        InputStream is = App.class.getClassLoader().getResourceAsStream(name);
        return new BufferedReader(new InputStreamReader(is)).lines().collect(Collectors.toList());
    }

    private static void showHelp() {
        System.out.println("Usage:");
        System.out.println("  java leadgen <num>");
        System.out.println("   OR");
        System.out.println("  ./gradlew run --args=<num>");
    }
}
